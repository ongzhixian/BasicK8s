# To trigger cronjob manually:
# kubectl create job --from=<name-of-cronjob> <name-of-job>
# kubectl create job --from=cronjob/get-sgx-tickers get-sgx-tickers
apiVersion: batch/v1
kind: CronJob
metadata:
  namespace: devenv
  name: get-sgx-isin
  labels:
    environment: dev
    app: get-sgx-isin
    app-type: cronjob
spec:
  jobTemplate:
    metadata:
      namespace: devenv
      name: get-sgx-isin
      labels:
        environment: dev
        app: get-sgx-isin
        app-type: cronjob
    spec:
      backoffLimit: 1
      template:
        spec:
          terminationGracePeriodSeconds: 0
          restartPolicy: Never
          volumes:
          - name: cloud-amqp-secret
            secret:
              secretName: cloud-amqp-secret
              items:
              - key: .cloudampq.json
                path: .cloudampq.json
              optional: false # default: false (secret must exist)
          - name: database-config-secret
            secret:
              secretName: database-config-secret
              items:
              - key: .database-config.json
                path: .database-config.json
              optional: false # default: false (secret must exist)
          - name: generic-128mi-fileshare
            persistentVolumeClaim:
              claimName: generic-128mi-pvc
          containers:
          - image: sgx-isin:v1
            name: get-sgx-isin
            volumeMounts:
            - name: cloud-amqp-secret
              mountPath: "/mnt/secrets/amqp"
              readOnly: true
            - name: database-config-secret
              mountPath: "/mnt/secrets/database"
              readOnly: true
            - name: generic-128mi-fileshare
              mountPath: /usr/share/generic-128mi
            # command: [ "sh", "-c", "date; echo hello world"]
  schedule: '20 17 * * *'
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
