# Headless service for stable DNS entries of StatefulSet members.
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  clusterIP: None
  ports:
  - port: 3306
  selector:
    app: mysql
---
# Client service for connecting to any MySQL instance for reads.
# For writes, you must instead connect to the primary: mysql-0.mysql.
apiVersion: v1
kind: Service
metadata:
  namespace: devenv
  name: mysql-readonly
  labels:
    app: mysql
    environment: dev
    readonly: "true"
spec:
  ports:
  - name: mysql
    port: 3306
  selector:
    app: mysql
---
# Create an external service per pod exposing a nodeport
apiVersion: v1
kind: Service
metadata:
  namespace: devenv
  name: mysql-ext
spec:
  type: NodePort
  ports:
  - port: 3306
  selector:
    app: mysql
---
# Expose a node-port so that we can access the read-write pod for development
# Note: The selector 'statefulset.kubernetes.io/pod-name: mysql-0' assigned automatically by statefulset
apiVersion: v1
kind: Service
metadata:
  namespace: devenv
  name: mysql-dev
  labels:
    app: mysql
    environment: dev
spec:
  type: NodePort
  ports:
  - name: mysql-port
    port: 3306
    nodePort: 30306
    targetPort: 3306
  selector:
    statefulset.kubernetes.io/pod-name: mysql-0
---
# There is another technique that suggest using loadbalancer to expose the service
# See https://itnext.io/exposing-statefulsets-in-kubernetes-698730fb92a1